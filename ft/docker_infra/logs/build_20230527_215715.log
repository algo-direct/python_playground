#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 453B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/node:20.1.0-bullseye
#3 DONE 5.8s

#4 [1/4] FROM docker.io/library/node:20.1.0-bullseye@sha256:0efc3ef3fea2822c9d16da084c40181ed7f74b6f45141100580f9887ccc8e9a1
#4 DONE 0.0s

#5 [2/4] WORKDIR /app
#5 CACHED

#6 [3/4] RUN apt-get update
#6 CACHED

#7 [4/4] RUN apt-get install -y build-essential cmake git openssh-server gdb pkg-config valgrind systemd-coredump
#7 CACHED

#8 exporting to image
#8 exporting layers done
#8 writing image sha256:520fbe4956f762f320ef365b50d55a9ff78780d770ee8cb7f7e76feedb3ca8ef done
#8 naming to docker.io/library/base_os:0.0.1 done
#8 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 281B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 transferring context: 2B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/base_os:0.0.1
#3 DONE 0.0s

#4 [1/6] FROM docker.io/library/base_os:0.0.1
#4 DONE 0.0s

#5 [2/6] RUN npm set progress=true
#5 CACHED

#6 [3/6] RUN npm --global --loglevel info install express
#6 CACHED

#7 [4/6] RUN npm --global --loglevel info install lodash
#7 CACHED

#8 [5/6] RUN npm --global --loglevel info install eslint
#8 CACHED

#9 [6/6] RUN npm --global --loglevel info install morgan
#9 2.248 npm info using npm@9.6.4
#9 2.261 npm info using node@v20.1.0
#9 2.618 npm http fetch GET 200 https://registry.npmjs.org/morgan 247ms (cache miss)
#9 2.733 npm http fetch GET 200 https://registry.npmjs.org/debug 86ms (cache hit)
#9 2.771 npm http fetch GET 200 https://registry.npmjs.org/on-finished 118ms (cache revalidated)
#9 2.783 npm http fetch GET 200 https://registry.npmjs.org/basic-auth 138ms (cache miss)
#9 2.791 npm http fetch GET 200 https://registry.npmjs.org/on-headers 136ms (cache miss)
#9 2.821 npm http fetch GET 200 https://registry.npmjs.org/depd 170ms (cache revalidated)
#9 2.895 npm http fetch GET 200 https://registry.npmjs.org/ms 29ms (cache hit)
#9 2.921 npm http fetch GET 200 https://registry.npmjs.org/ee-first 53ms (cache revalidated)
#9 2.936 npm http fetch GET 200 https://registry.npmjs.org/safe-buffer 73ms (cache revalidated)
#9 3.277 npm http fetch GET 200 https://registry.npmjs.org/on-headers/-/on-headers-1.0.2.tgz 249ms (cache miss)
#9 3.293 npm http fetch GET 200 https://registry.npmjs.org/morgan/-/morgan-1.10.0.tgz 271ms (cache miss)
#9 3.304 npm http fetch GET 200 https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz 278ms (cache miss)
#9 3.312 npm http fetch GET 200 https://registry.npmjs.org/on-finished/-/on-finished-2.3.0.tgz 281ms (cache miss)
#9 3.317 npm http fetch GET 200 https://registry.npmjs.org/basic-auth/-/basic-auth-2.0.1.tgz 283ms (cache miss)
#9 3.338 
#9 3.338 added 9 packages in 1s
#9 3.344 npm info ok 
#9 DONE 3.5s

#10 exporting to image
#10 exporting layers
#10 exporting layers 0.2s done
#10 writing image sha256:f40f2f247883691f10516194e3a0d0f6644bb9445ce09599409748bd55893a2a
#10 writing image sha256:f40f2f247883691f10516194e3a0d0f6644bb9445ce09599409748bd55893a2a 0.0s done
#10 naming to docker.io/library/base_node_js:0.0.1 0.0s done
#10 DONE 0.3s
